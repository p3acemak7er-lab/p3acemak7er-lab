<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.7">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-03-21T13:26:26-04:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">bold_coding</title><subtitle>My personal brand and blog development enterprise that I hope to share my learning journey for others to network, collaborate, or learn from me.</subtitle><entry><title type="html">General Terms</title><link href="http://localhost:4000/bold-smile.github.io/posts/4" rel="alternate" type="text/html" title="General Terms" /><published>2021-02-01T00:00:00-05:00</published><updated>2021-02-01T00:00:00-05:00</updated><id>http://localhost:4000/bold-smile.github.io/posts/Amazon_S3</id><content type="html" xml:base="http://localhost:4000/bold-smile.github.io/posts/4">&lt;p&gt;S3 is the storage feature of Amazon Web Services. Things are stored within &lt;strong&gt;buckets&lt;/strong&gt; and the storage contents are called &lt;strong&gt;objects&lt;/strong&gt;. There is encryption for buckets.&lt;/p&gt;
&lt;h1 id=&quot;lifecycle-rules&quot;&gt;Lifecycle Rules&lt;/h1&gt;
&lt;p&gt;The system allows a user to determine when objects transfer between s3 tiers in time amounts or when the past versions will be deleted.&lt;/p&gt;
&lt;h1 id=&quot;versioning&quot;&gt;Versioning&lt;/h1&gt;
&lt;p&gt;Once versioning is turned off for a bucket; it can’t be disabled. Each version has to be individually selected before it can be deleted or made a public.&lt;/p&gt;
&lt;h1 id=&quot;prefixes&quot;&gt;Prefixes&lt;/h1&gt;
&lt;p&gt;How many prefixes within your bucket object name determine how many requests can be made to it.&lt;/p&gt;

&lt;p&gt;I think S3 is a much more robust system than classic file storage like Windows uses. There are some many precautions put into place to prevent accidental data loss and or reduce costs that are spent to store the data using the multiple tiers. 
Intelligent tiering is really awesome. The term just means that objects are switched by AWS for you when needed.&lt;/p&gt;</content><author><name></name></author><summary type="html">S3 is the storage feature of Amazon Web Services. Things are stored within buckets and the storage contents are called objects. There is encryption for buckets. Lifecycle Rules The system allows a user to determine when objects transfer between s3 tiers in time amounts or when the past versions will be deleted. Versioning Once versioning is turned off for a bucket; it can’t be disabled. Each version has to be individually selected before it can be deleted or made a public. Prefixes How many prefixes within your bucket object name determine how many requests can be made to it.</summary></entry><entry><title type="html">General Terms</title><link href="http://localhost:4000/bold-smile.github.io/posts/3" rel="alternate" type="text/html" title="General Terms" /><published>2021-01-13T00:00:00-05:00</published><updated>2021-01-13T00:00:00-05:00</updated><id>http://localhost:4000/bold-smile.github.io/posts/Javascript_terms</id><content type="html" xml:base="http://localhost:4000/bold-smile.github.io/posts/3">&lt;h1 id=&quot;terms&quot;&gt;Terms&lt;/h1&gt;
&lt;details&gt;
   &lt;summary&gt;
 High-Level 
  &lt;/summary&gt;
 =&amp;gt; More abstraction, it seems counterintuitive to say but high-level means the syntax is more natural and there is less manipulating of the computer technology itself when coding. 
&lt;/details&gt;
&lt;details&gt;
   &lt;summary&gt;
 Object-oriented
  &lt;/summary&gt;
 =&amp;gt; A class in action or an &quot;instance&quot; that can both hold and manipulate data. 
&lt;/details&gt;
&lt;details&gt;
   &lt;summary&gt;
 Multi-Paradigm 
  &lt;/summary&gt;
 =&amp;gt; A paradigm is a general trend of doing something so if we break down this term to be more simple it means that javascript can be performed in different styles of syntax and flow. For example, the way javascript is coded in React is different than Vue. 
&lt;/details&gt;
&lt;details&gt;
   &lt;summary&gt;
 Dynamic typing 
  &lt;/summary&gt;
 =&amp;gt; Javascript doesn't require manually defining the value of a variable; it automatically defines it. &lt;strong&gt;Example&lt;/strong&gt;   &lt;figure class=&quot;highlight&quot;&gt;
    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;example&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;example&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;example&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;intoString&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;redeclares&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;variable&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;automatically&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;changes&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;example&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/figure&gt;
 
&lt;/details&gt;
&lt;details&gt;
   &lt;summary&gt;
 DOM (Document Object Manipulation) 
  &lt;/summary&gt;
 Websites written in html or xml can be accessed through this API to alter, edit, remove, etc... what is on the document by it's classes or ID's. 
&lt;/details&gt;</content><author><name></name></author><summary type="html">Terms High-Level =&amp;gt; More abstraction, it seems counterintuitive to say but high-level means the syntax is more natural and there is less manipulating of the computer technology itself when coding. Object-oriented =&amp;gt; A class in action or an &quot;instance&quot; that can both hold and manipulate data. Multi-Paradigm =&amp;gt; A paradigm is a general trend of doing something so if we break down this term to be more simple it means that javascript can be performed in different styles of syntax and flow. For example, the way javascript is coded in React is different than Vue. Dynamic typing =&amp;gt; Javascript doesn't require manually defining the value of a variable; it automatically defines it.</summary></entry><entry><title type="html">Data Structures?</title><link href="http://localhost:4000/bold-smile.github.io/posts/2" rel="alternate" type="text/html" title="Data Structures?" /><published>2020-12-20T00:00:00-05:00</published><updated>2020-12-20T00:00:00-05:00</updated><id>http://localhost:4000/bold-smile.github.io/posts/data_structures</id><content type="html" xml:base="http://localhost:4000/bold-smile.github.io/posts/2">&lt;h1 id=&quot;arrays&quot;&gt;Arrays&lt;/h1&gt;
&lt;p&gt;An array is a linear data structure composed of any &lt;strong&gt;primitive&lt;/strong&gt; data type like numbers,strings, booleans, etc…&lt;/p&gt;
&lt;details&gt;
   &lt;summary&gt;
 Array Syntax 
  &lt;/summary&gt;
   &lt;figure class=&quot;highlight&quot;&gt;
    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;declares&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;empty&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;declares&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;an&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numbers&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/figure&gt;
 
&lt;/details&gt;</content><author><name></name></author><summary type="html">Arrays An array is a linear data structure composed of any primitive data type like numbers,strings, booleans, etc… Array Syntax let array = []; ...declares empty array. let array2 = [1, 2, 3, 4] ... declares an array of numbers</summary></entry><entry><title type="html">The beginning!</title><link href="http://localhost:4000/bold-smile.github.io/posts/1" rel="alternate" type="text/html" title="The beginning!" /><published>2020-08-20T00:00:00-04:00</published><updated>2020-08-20T00:00:00-04:00</updated><id>http://localhost:4000/bold-smile.github.io/posts/beginning</id><content type="html" xml:base="http://localhost:4000/bold-smile.github.io/posts/1">&lt;p&gt;This blog will be sectionalized with a main category focusing on concepts within the discipline of computer science. Additionally, there will be tangent posts about my interests.&lt;/p&gt;</content><author><name></name></author><summary type="html">This blog will be sectionalized with a main category focusing on concepts within the discipline of computer science. Additionally, there will be tangent posts about my interests.</summary></entry></feed>